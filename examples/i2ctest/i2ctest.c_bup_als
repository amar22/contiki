/*
 * Copyright (c) 2006, Swedish Institute of Computer Science.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * This file is part of the Contiki operating system.
 *
 */

/**
 * \file
 *         A very simple Contiki application showing how relay works
 * \author
 *         Manoj Sony <manojsony@gmail.com>
 */

#include "contiki.h"
#include "lib/sensors.h"
#include "dev/adc.h"
#include "dev/cc2538-sensors.h"
#include "dev/i2c.h"
#include "lib/sensors.h"
#include "dev/als-sensor.h"
#include <stdio.h> /* For printf() */

#define LED_RELAY_PIN 2     /* Relay Pin */
#define PORT_D GPIO_D_BASE


#define I2C_SCL_PORT             GPIO_B_NUM
#define I2C_SCL_PIN              1
#define I2C_SDA_PORT             GPIO_B_NUM
#define I2C_SDA_PIN              0

#define I2C_SCL_NORMAL_BUS_SPEED  100000  /* 100KHz I2C */
#define I2C_SCL_FAST_BUS_SPEED    400000  /* 400KHz I2C */

/*---------------------------------------------------------------------------*/
PROCESS(hello_world_process, "Hello world process");
AUTOSTART_PROCESSES(&hello_world_process);
/*---------------------------------------------------------------------------*/
PROCESS_THREAD(hello_world_process, ev, data)
{
  
  static struct etimer timer;
  static int count;
  PROCESS_BEGIN();
/*  i2c_init(I2C_SCL_PORT, I2C_SCL_PIN, I2C_SDA_PORT, I2C_SDA_PIN, 
             I2C_SCL_NORMAL_BUS_SPEED);*/

  etimer_set(&timer, CLOCK_CONF_SECOND * 1);
  count = 0;
  relay_enable(PORT_D,LED_RELAY_PIN);
 
   while(1) {

    //PROCESS_WAIT_EVENT();
PROCESS_YIELD();
 if(ev == PROCESS_EVENT_TIMER) {
    //if(ev == PROCESS_EVENT_TIMER) {
    

      printf("VDD = %d mV\n",
             vdd3_sensor.value(CC2538_SENSORS_VALUE_TYPE_CONVERTED));

      printf("Temperature = %d mC\n",
              cc2538_temp_sensor.value(CC2538_SENSORS_VALUE_TYPE_CONVERTED));

      printf("Ambient light sensor = %d raw\n", als_sensor.value(0));    
      //if(count %2 == 0){
		//relay_on(PORT_D,LED_RELAY_PIN);

	  //SENSORS_ACTIVATE(sht25);
          //printf( "%d is temp\n",cc2538_temp_sensor.value(CC2538_SENSORS_VALUE_TYPE_CONVERTED)); 
		

      //	}
     // 	else {  
       		//relay_off(PORT_D,LED_RELAY_PIN);
     // 	} 
/*	if(count %2 == 0)
	{	
		relay_toggle(PORT_D,LED_RELAY_PIN);
		relay_status(PORT_D,LED_RELAY_PIN);
	}
*/
	//count ++;
	etimer_set(&timer, CLOCK_SECOND);
	//etimer_reset(&timer);
    }
  }
  
  
  PROCESS_END();
}
/*---------------------------------------------------------------------------*/
